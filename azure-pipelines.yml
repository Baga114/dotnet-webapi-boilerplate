trigger:
- main

pool:
  vmImage: 'windows-latest'  # Use a Windows agent pool

variables:
  - group: soar-login2
  - name: acrServiceConnection
    value: 'acr-connection'
  - name: sonarServiceConnection
    value: 'sonar-connection'
  - name: aksServiceConnection
    value: 'aks-connection'

stages:
- stage: Analysis
  jobs:
  - job: AnalysisJob
    displayName: 'Run Analysis'
    steps:
    - checkout: self

    # SonarQube Prepare Analysis Configuration
    - task: SonarQubePrepare@4
      inputs:
        SonarQube: '$(sonarServiceConnection)'
        scannerMode: 'MSBuild'
        projectKey: 'dotnet-test'  # Replace with your project key
        projectName: 'dotnet-test'  # Replace with your project name

- stage: SonarQualityGateCheck
  jobs:
  - job: SonarQualityGateCheckJob
    displayName: 'Sonar Quality Gate Check'
    dependsOn: Analysis
    steps:
    - checkout: self

    # Run SonarQube analysis and publish Quality Gate results
    - task: SonarQubeAnalyze@5
      displayName: 'Run SonarQube analysis'
      inputs:
        SonarQube: '$(sonarServiceConnection)'

    - task: SonarQubePublish@5
      displayName: 'Publish SonarQube Quality Gate Result'
      inputs:
        pollingTimeoutSec: '300'

  - job: ScriptJob
    displayName: 'Run Custom Script'
    dependsOn: SonarQualityGateCheck
    steps:
    - checkout: self

    # Add your custom script here
    - powershell: |
        dotnet build
        dotnet publish

# Add more stages or jobs as needed
